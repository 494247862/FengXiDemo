{"remainingRequest":"D:\\svn\\DeyiBaseDemoVue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\svn\\DeyiBaseDemoVue\\src\\views\\MenuManage\\index.vue?vue&type=style&index=0&id=4930b93e&scoped=true&lang=css&","dependencies":[{"path":"D:\\svn\\DeyiBaseDemoVue\\src\\views\\MenuManage\\index.vue","mtime":1686639387795},{"path":"D:\\svn\\DeyiBaseDemoVue\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\svn\\DeyiBaseDemoVue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\svn\\DeyiBaseDemoVue\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\svn\\DeyiBaseDemoVue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\svn\\DeyiBaseDemoVue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouZWwtcm93IHsKICBtYXJnaW4tYm90dG9tOiAxMHB4Owp9CgouZWwtcm93Omxhc3QtY2hpbGQgewogIG1hcmdpbi1ib3R0b206IDAKfQoKLmVsLWZvcm0taXRlbSB7CiAgbWFyZ2luLWJvdHRvbTogMAp9CgovKuW8uuS/ruaUueihqOagvOWxleW8gOaMiemSruS9jee9riovCj4+PiAuZWwtdGFibGVfX2V4cGFuZC1pY29uIHsKICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgbGVmdDogMTBweAp9Cg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqPA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/MenuManage","sourcesContent":["<!--菜单管理-->\n<template>\n  <div class=\"app-container\" style=\"height:100%\">\n    <el-row>\n      <!--      查询条件按-->\n      <el-card style=\"height: 100%\">\n        <el-form label-width=\"80px\" label-position=\"right\" :inline=\"true\" :model=\"QueryData\">\n          <el-form-item label=\"菜单名称:\">\n            <el-input v-model=\"QueryData.menuName\" />\n          </el-form-item>\n          <el-form-item label=\"菜单编号:\">\n            <el-input v-model=\"QueryData.menuCode\" />\n          </el-form-item>\n          <el-form-item label=\"菜单地址:\">\n            <el-input v-model=\"QueryData.menuUrl\" />\n          </el-form-item>\n          <el-form-item class=\"submit-button\">\n            <el-button @click=\"clearQueryData\">清空</el-button>\n          </el-form-item>\n          <el-form-item class=\"submit-button\">\n            <el-button @click=\"QueryTableData\">查询</el-button>\n          </el-form-item>\n        </el-form>\n      </el-card>\n    </el-row>\n\n    <el-row>\n      <el-card style=\"height: 100%\">\n        <div slot=\"header\" style=\"width: 100%;\n        display: flex;align-items: center;\n          justify-content: space-between;\">\n          <div>\n            <i class=\"el-icon-s-grid\"></i>\n            <span style=\"margin-left: 5px;\">菜单数据</span>\n          </div>\n          <div>\n            <el-button @click=\"openAdd(null)\" size=\"small\" type=\"primary\" v-if=\"$authButton('add')\">新增</el-button>\n          </div>\n        </div>\n\n        <!--    表格数据-->\n        <el-table\n          row-key=\"id\"\n          lazy\n          :tree-props=\"{children:'children',hasChildren:true}\"\n          :data=\"TableData\"\n          :header-cell-style=\"{'text-align': 'center'}\"\n          :cell-style=\"{'text-align': 'center'}\"\n          style=\"width: 100%\"\n          border>\n          <el-table-column\n            prop=\"menuName\"\n            label=\"菜单名称\">\n          </el-table-column>\n\n          <el-table-column\n            prop=\"menuCode\"\n            label=\"菜单编号\">\n          </el-table-column>\n\n          <el-table-column\n            prop=\"menuUrl\"\n            label=\"菜单地址\">\n          </el-table-column>\n\n          <el-table-column\n            prop=\"number\"\n            label=\"序号\">\n          </el-table-column>\n\n          <el-table-column\n            label=\"图标\">\n            <template slot-scope=\"scope\">\n              <div v-if=\"scope.row.icon\">\n                <i v-if=\"scope.row.icon.indexOf('el-icon')!==-1\" :class=\"[scope.row.icon, 'sub-el-icon']\" />\n                <svg-icon v-if=\"scope.row.icon.indexOf('el-icon')===-1\" :icon-class=\"scope.row.icon\" />\n              </div>\n            </template>\n          </el-table-column>\n\n          <el-table-column\n            fixed=\"right\"\n            label=\"操作\">\n            <template slot-scope=\"scope\">\n              <el-button\n                v-if=\"$authButton('delete')\"\n                style=\"color: red\"\n                type=\"text\"\n                @click=\"deleteRow(scope.row)\"\n                size=\"mini\">删除\n              </el-button>\n              <el-button\n                v-if=\"$authButton('addChild')\"\n                type=\"text\"\n                @click=\"openAdd(scope.row)\"\n                size=\"mini\">新增子菜单\n              </el-button>\n              <el-button\n                v-if=\"$authButton('update')\"\n                @click=\"openUpdate(scope.row)\"\n                type=\"text\"\n                size=\"mini\">编辑\n              </el-button>\n\n              <el-button\n                v-if=\"$authButton('buttonSetting')\"\n                @click=\"openButton(scope.row)\"\n                type=\"text\"\n                size=\"mini\">按钮配置\n              </el-button>\n            </template>\n          </el-table-column>\n        </el-table>\n      </el-card>\n    </el-row>\n\n    <!--    编辑窗体-->\n    <el-dialog title=\"编辑菜单\"\n               width=\"25%\"\n               :visible.sync=\"isShowUpdate\"\n               v-if=\"isShowUpdate\"\n               :close-on-click-modal=\"false\">\n      <Update :row=\"this.clickRow\" :close-fun=\"this.closeUpdate\" />\n    </el-dialog>\n    <!--    新增窗体-->\n    <el-dialog title=\"新增菜单\"\n               width=\"25%\"\n               :visible.sync=\"isShowAdd\"\n               :close-on-click-modal=\"false\"\n               v-if=\"isShowAdd\">\n      <Add :close-fun=\"closeAdd\" :row=\"this.clickRow\" />\n    </el-dialog>\n    <!--    按钮配置-->\n    <el-dialog title=\"按钮配置\"\n               :visible.sync=\"isShowButton\"\n               :close-on-click-modal=\"false\"\n               v-if=\"isShowButton\">\n      <ButtonEdit :row=\"this.clickRow\" />\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { QueryMenuData, deleteMenu } from '@/api/menu'\nimport Update from '@/views/MenuManage/Update'\nimport Add from '@/views/MenuManage/Add'\nimport ButtonEdit from '@/views/MenuManage/ButtonEdit'\n\nexport default {\n  name: 'MenuManage',\n  components: { ButtonEdit, Update, Add },\n  data() {\n    return {\n      clickRow: null,\n      TableData: [],\n      QueryData: {\n        menuName: null,\n        menuCode: null,\n        menuUrl: null\n      },\n      isShowUpdate: false,\n      isShowAdd: false,\n      isShowButton: false\n    }\n  },\n  mounted() {\n    this.QueryTableData()\n  },\n  methods: {\n    // 清空\n    clearQueryData() {\n      this.QueryData = {\n        menuName: null,\n        menuCode: null,\n        menuUrl: null\n      }\n    },\n    // 查询数据\n    QueryTableData() {\n      QueryMenuData(this.QueryData).then(res => {\n        this.TableData = res\n      }).catch(err => {\n        this.$notify.error({\n          title: '错误',\n          message: err.message\n        })\n      })\n    },\n    // 打开编辑窗口\n    openUpdate(row) {\n      this.clickRow = row\n      this.isShowUpdate = true\n    },\n    // 关闭编辑窗口\n    closeUpdate() {\n      this.isShowUpdate = false\n      this.QueryTableData()\n    },\n\n    // 打开新增窗口\n    openAdd(row) {\n      this.clickRow = row\n      this.isShowAdd = true\n    },\n\n    // 关闭新增窗口\n    closeAdd() {\n      this.isShowAdd = false\n      this.QueryTableData()\n    },\n\n    // 打开按钮窗口\n    openButton(row) {\n      this.clickRow = row\n      this.isShowButton = true\n    },\n\n    // 删除菜单\n    deleteRow(row) {\n      this.$confirm('是否删除该菜单？菜单名：' + row.menuName, '删除菜单', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消'\n      }).then(async() => {\n        await deleteMenu(row.id).then(res => {\n          this.$notify.success({\n            title: '成功',\n            message: '删除成功'\n          })\n          this.QueryTableData()\n        }).catch(err => {\n          this.$notify.error({\n            title: '失败',\n            message: err.message\n          })\n        })\n      }).catch(() => {\n\n      })\n\n    }\n  },\n}\n</script>\n\n<style scoped>\n  .el-row {\n    margin-bottom: 10px;\n  }\n\n  .el-row:last-child {\n    margin-bottom: 0\n  }\n\n  .el-form-item {\n    margin-bottom: 0\n  }\n\n  /*强修改表格展开按钮位置*/\n  >>> .el-table__expand-icon {\n    position: absolute;\n    left: 10px\n  }\n</style>\n"]}]}