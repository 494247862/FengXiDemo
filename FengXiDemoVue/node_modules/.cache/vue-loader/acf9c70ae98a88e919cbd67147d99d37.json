{"remainingRequest":"D:\\svn\\FengXiDemo\\FengXiDemoVue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\svn\\FengXiDemo\\FengXiDemoVue\\src\\views\\RoleManage\\role.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\svn\\FengXiDemo\\FengXiDemoVue\\src\\views\\RoleManage\\role.vue","mtime":1695196204730},{"path":"D:\\svn\\FengXiDemo\\FengXiDemoVue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\svn\\FengXiDemo\\FengXiDemoVue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"D:\\svn\\FengXiDemo\\FengXiDemoVue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\svn\\FengXiDemo\\FengXiDemoVue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["role.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+HA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"role.vue","sourceRoot":"src/views/RoleManage","sourcesContent":["<template>\n  <div class=\"app-container\" style=\"height:100%\">\n    <el-row>\n      <el-card style=\"height: 100%\">\n        <el-form label-width=\"80px\" label-position=\"right\" class=\"search-form\" :inline=\"true\" :model=\"queryData\">\n          <el-form-item label=\"角色编号:\" prop=\"roleCode\">\n            <el-input v-model=\"queryData.roleCode\"/>\n          </el-form-item>\n          <el-form-item label=\"角色名称:\" prop=\"roleName\">\n            <el-input v-model=\"queryData.roleName\"/>\n          </el-form-item>\n          <el-form-item class=\"submit-button\">\n            <el-button @click=\"()=>{queryData={}}\">清空</el-button>\n          </el-form-item>\n          <el-form-item class=\"submit-button\">\n            <el-button @click=\"QueryRolePage(currentPage,pageSize)\">查询</el-button>\n          </el-form-item>\n        </el-form>\n      </el-card>\n    </el-row>\n    <el-row style=\"height: calc(100% - 110px)\">\n      <el-card style=\"height: 100%\" body-style=\"height:100%\">\n        <div slot=\"header\" style=\"width: 100%;\n        display: flex;align-items: center;\n          justify-content: space-between;\">\n          <div>\n            <i class=\"el-icon-s-grid\"></i>\n            <span style=\"margin-left: 5px;\">角色数据</span>\n          </div>\n          <div>\n            <el-button @click=\"handleAddRole\" size=\"small\" type=\"primary\" v-if=\"$authButton('add')\">新增角色</el-button>\n          </div>\n        </div>\n\n        <!--        表格数据-->\n        <el-table :data=\"rolesList\" v-loading=\"loading\" style=\"width: 100%;height: calc(100% - 120px);overflow-y: auto\"\n                  border>\n          <el-table-column align=\"center\" label=\"角色编号\" width=\"220\">\n            <template slot-scope=\"scope\">\n              {{ scope.row.roleCode }}\n            </template>\n          </el-table-column>\n          <el-table-column align=\"center\" label=\"角色名称\" width=\"220\">\n            <template slot-scope=\"scope\">\n              {{ scope.row.roleName }}\n            </template>\n          </el-table-column>\n          <el-table-column align=\"center\" label=\"描述\">\n            <template slot-scope=\"scope\">\n              {{ scope.row.description }}\n            </template>\n          </el-table-column>\n          <el-table-column align=\"center\" label=\"操作\">\n            <template slot-scope=\"scope\">\n              <el-button type=\"primary\" size=\"small\" @click=\"handleEdit(scope)\" v-if=\"$authButton('update')\">\n                编辑\n              </el-button>\n              <el-button type=\"danger\" size=\"small\" @click=\"handleDelete(scope)\" v-if=\"$authButton('delete')\">\n                删除\n              </el-button>\n            </template>\n          </el-table-column>\n        </el-table>\n        <!--        分页-->\n        <div style=\"width: 100%;text-align: center;margin-top: 20px;\">\n          <el-pagination layout=\"total, sizes, prev, pager, next, jumper\"\n                         background\n                         @current-change=\"handleCurrentChange\"\n                         @size-change=\"sizeChange\"\n                         :current-page=\"currentPage\"\n                         :page-sizes=\"[10, 20, 30, 50]\"\n                         :total=\"total\"\n                         :page-size=\"pageSize\"/>\n        </div>\n      </el-card>\n    </el-row>\n\n    <el-drawer\n      :visible.sync=\"dialogVisible\"\n      direction=\"rtl\"\n      :title=\"dialogType==='edit'?'编辑角色':'新增角色'\">\n      <div style=\"margin-left: 30px;margin-right: 30px;height: 100%;display: flex;\n          flex-direction: column;\n           justify-content: space-between;\">\n        <el-form :model=\"role\" label-width=\"80px\" label-position=\"left\">\n          <el-form-item label=\"角色编号\">\n            <el-input v-model=\"role.roleCode\" :readonly=\"dialogType==='edit'\" placeholder=\"请输入角色编号\"/>\n          </el-form-item>\n          <el-form-item label=\"角色名称\">\n            <el-input v-model=\"role.roleName\" placeholder=\"请输入角色名称\"/>\n          </el-form-item>\n          <el-form-item label=\"描述\">\n            <el-input\n              v-model=\"role.description\"\n              :autosize=\"{ minRows: 2, maxRows: 4}\"\n              type=\"textarea\"\n              placeholder=\"请输入角色描述\"\n            />\n          </el-form-item>\n\n          <div style=\"display: flex\">\n            <el-form-item label=\"菜单\" style=\"width: 50%\">\n              <el-tree ref=\"tree\" :check-strictly=\"checkStrictly\" :data=\"menusData\" :props=\"defaultProps\" show-checkbox\n                       node-key=\"id\" class=\"permission-tree\"/>\n            </el-form-item>\n\n            <el-form-item label=\"按钮\" style=\"width: 50%\">\n              <el-tree ref=\"buttonTree\" :check-strictly=\"false\" :data=\"buttonData\" :props=\"buttonProps\" show-checkbox\n                       node-key=\"id\"/>\n            </el-form-item>\n          </div>\n\n        </el-form>\n        <div style=\"text-align:right;margin-bottom: 20px;\">\n          <el-button type=\"danger\" @click=\"dialogVisible=false\">\n            取消\n          </el-button>\n          <el-button type=\"primary\" @click=\"confirmRole\">\n            确认\n          </el-button>\n        </div>\n      </div>\n    </el-drawer>\n  </div>\n</template>\n\n<script>\n  import path from 'path'\n  import {getAllRoles, addRole, deleteRole, updateRole, QueryRolePage} from '@/api/role'\n  import {getMenuTrees, getMenuTreesByRoleId} from '@/api/menu'\n  import {getMenuButtonTree} from '@/api/button'\n\n  const defaultRole = {\n    id: '',\n    roleCode: '',\n    roleName: '',\n    description: '',\n    roleMenus: []\n  }\n\n  export default {\n    name: 'RoleManage',\n    data() {\n      return {\n        role: Object.assign({}, defaultRole),\n        menusData: [],\n        buttonData: [],\n        rolesList: [],\n        dialogVisible: false,\n        dialogType: 'new',\n        checkStrictly: false,\n        defaultProps: {\n          children: 'children',\n          label: 'menuName'\n        },\n        buttonProps: {\n          children: 'children',\n          label: 'name'\n        },\n        queryData: {},\n\n        currentPage: 1,\n        pageSize: 10,\n        total: 10,\n        loading: false\n      }\n    },\n    created() {\n      // Mock: get all routes and roles list from server\n      this.initData()\n    },\n    methods: {\n      initData() {\n        this.getMenuButtonTree()\n        this.getMenuTrees()\n        this.QueryRolePage(this.currentPage, this.pageSize)\n      },\n\n      // 查询数据\n      QueryRolePage(page, pageSize) {\n        let data = {...this.queryData}\n        data.page = page\n        data.pageSize = pageSize\n        this.loading = true\n        QueryRolePage(data).then(res => {\n          this.rolesList = res.data\n          this.total = res.count\n          this.loading = false\n        }).catch(err => {\n          this.$notify.error({\n            title: '查询失败',\n            message: err.message\n          })\n          this.loading = false\n        })\n      },\n\n      handleCurrentChange(val) {\n        this.currentPage = val\n        this.QueryRolePage(val, this.pageSize)\n      },\n\n      sizeChange(val) {\n        this.pageSize = val\n        this.QueryRolePage(this.currentPage, val)\n      },\n\n      async getMenuTrees() {\n        const menus = await getMenuTrees()\n        this.menusData = menus\n      },\n\n      async getMenuButtonTree() {\n        const buttonData = await getMenuButtonTree()\n        this.buttonData = buttonData\n      },\n\n      async getAllRoles() {\n        const roles = await getAllRoles()\n        this.rolesList = roles\n      },\n\n      getCheckedMenus(menuIds, menus) {\n        let data = []\n        menus.forEach(menu => {\n          if (menuIds && menuIds.includes(menu.id)) {\n            data.push(menu)\n            if (menu.children) {\n              const temp = this.getCheckedMenus(menuIds, menu.children)\n              if (temp.length > 0) {\n                data = [...data, ...temp]\n              }\n            }\n          }\n        })\n        return data\n      },\n      getRoleMenus(roleID) {\n        const roleMenus = getMenuTreesByRoleId(roleID)\n        return roleMenus\n      },\n      handleAddRole() {\n        this.role = Object.assign({}, defaultRole)\n        if (this.$refs.tree) {\n          this.$refs.tree.setCheckedNodes([])\n          this.$refs.buttonTree.setCheckedNodes([])\n        }\n        this.dialogType = 'new'\n        this.dialogVisible = true\n      },\n      handleEdit(scope) {\n        this.dialogType = 'edit'\n        this.dialogVisible = true\n        this.checkStrictly = true\n        this.role = scope.row\n        this.$nextTick(() => {\n          // const roleMenus = this.getCheckedMenus(this.role.menuIds, this.menusData)\n          // this.$refs.tree.setCheckedNodes(roleMenus)\n          // this.$refs.tree.setCheckedKeys(role.menuIds)\n          // this.$refs.buttonTree.setCheckedKeys([1,2])\n\n          // set checked state of a node not affects its father and child nodes\n          let menuIds = this.role.menuIds === null ? [] : this.role.menuIds.split(',').map(Number)\n          let buttonIds = this.role.buttonIds === null ? [] : this.role.buttonIds.split(',').map(Number)\n          this.$refs.tree.setCheckedKeys(menuIds)\n          this.$refs.buttonTree.setCheckedKeys(buttonIds)\n          this.checkStrictly = false\n        })\n      },\n      handleDelete({$index, row}) {\n        this.$confirm('确定要删除此角色吗？', 'Warning', {\n          confirmButtonText: '确认',\n          cancelButtonText: '取消',\n          type: 'warning'\n        })\n          .then(async () => {\n            await deleteRole(row.id)\n            this.rolesList.splice($index, 1)\n            this.$message({\n              type: 'success',\n              message: '删除成功!'\n            })\n          })\n          .catch(err => {\n            console.error(err)\n          })\n      },\n      async confirmRole() {\n        const isEdit = this.dialogType === 'edit'\n\n        // 获取选中的子节点\n        let checkedKeys = this.$refs.tree.getCheckedKeys()\n        // 获取选中的父节点\n        let hafCheckedKeys = this.$refs.tree.getHalfCheckedKeys()\n        // 合并\n        let functionIdList = checkedKeys.concat(hafCheckedKeys)\n\n        // 按钮树\n        let buttonCheckedKeys = this.$refs.buttonTree.getCheckedKeys()\n        buttonCheckedKeys = buttonCheckedKeys.filter(t => typeof (t) === 'number')\n\n        this.role.menuIds = functionIdList\n        this.role.buttonIds = buttonCheckedKeys\n        if (isEdit) {\n          await updateRole(this.role)\n          for (let index = 0; index < this.rolesList.length; index++) {\n            if (this.rolesList[index].id === this.role.id) {\n              this.rolesList.splice(index, 1, Object.assign({}, this.role))\n              break\n            }\n          }\n        } else {\n          await addRole(this.role)\n          await this.getAllRoles()\n        }\n\n        const {roleCode, roleName} = this.role\n        this.dialogVisible = false\n        this.$notify({\n          title: '操作成功',\n          dangerouslyUseHTMLString: true,\n          message: `\n            <div>用户编号: ${roleCode}</div>\n            <div>用户名称: ${roleName}</div>\n          `,\n          type: 'success'\n        })\n        this.initData()\n      }\n    },\n  }\n</script>\n\n<style lang=\"scss\" scoped>\n  .app-container {\n    .roles-table {\n      margin-top: 30px;\n    }\n\n    .permission-tree {\n      margin-bottom: 30px;\n    }\n  }\n\n  .el-row {\n    margin-bottom: 20px;\n    margin-left: 10px;\n    margin-right: 10px;\n  }\n\n  .el-row:last-child {\n    margin-bottom: 0\n  }\n\n  .search-form .el-form-item {\n    margin-bottom: 0\n  }\n</style>\n"]}]}